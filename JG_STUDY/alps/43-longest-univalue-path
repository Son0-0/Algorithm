# https://leetcode.com/problems/longest-univalue-path/
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def __init__(self):
        self.answer = 0
    
    def longestUnivaluePath(self, root: Optional[TreeNode]) -> int:

        def dfs(node, cnt):
            if node is None:
                return
            
            if node.left is not None:
                if node.val == node.left.val:
                    dfs(node.left, cnt + 1)
                    self.answer = max(self.answer, cnt)  
                else:
                    dfs(node.left, 1)
            if node.right is not None:
                if node.val == node.right.val:
                    dfs(node.right, cnt + 1)
                    self.answer = max(self.answer, cnt)  
                else:
                    dfs(node.right, 1)
                    
        dfs(root, 1)
        
        return self.answer
